# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUntitled():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_untitled(self):
    self.driver.get("https://www.investing.com/")
    self.driver.set_window_size(762, 708)
    self.driver.switch_to.frame(6)
    self.driver.find_element(By.CSS_SELECTOR, ".fFW7wc-ibnC6b-sM5MNb:nth-child(2) .fFW7wc-ibnC6b-ssJRIf").click()
    self.driver.find_element(By.CSS_SELECTOR, ".LgbsSe-bN97Pc").click()
    self.driver.switch_to.default_content()
    element = self.driver.find_element(By.CSS_SELECTOR, ".list_list__item__dwS6E:nth-child(2) .navbar_nav_item_text__s9e_T")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.LINK_TEXT, "United States")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.LINK_TEXT, "Commodities")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.LINK_TEXT, "Metals")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.LINK_TEXT, "Softs")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.LINK_TEXT, "Gold").click()
    self.driver.execute_script("window.scrollTo(0,1)")
    self.driver.execute_script("window.scrollTo(0,308)")
    self.driver.execute_script("window.scrollTo(0,320)")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"Historical Data\"]").click()
    self.driver.find_element(By.LINK_TEXT, "Historical Data").click()
    self.driver.execute_script("window.scrollTo(0,205)")
    self.driver.execute_script("window.scrollTo(0,333)")
    element = self.driver.find_element(By.CSS_SELECTOR, ".text-center:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".text-center:nth-child(2)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".text-center:nth-child(2)").click()
  
